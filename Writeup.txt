In this project, I developed a hybrid quantum-classical neural network using PyTorch and Qiskit to classify breast cancer tumors as malignant or benign based on the Wisconsin Diagnostic Breast Cancer (WDBC) dataset. The dataset contains 30 numeric features extracted from breast mass images along with a diagnosis label. After loading the data, I preprocessed it by removing the ID column, converting the diagnosis labels into binary values (1 for malignant and 0 for benign), and normalizing the features using z-score normalization to standardize their scale. The data was then converted into PyTorch tensors and split into training and test sets using stratified sampling to preserve the class distribution.

The hybrid model combines classical fully connected layers with a parameterized quantum circuit (PQC). The classical part starts with a linear layer that reduces the original 30 features down to 10, followed by another linear layer compressing the features further down to 5, matching the number of qubits in the quantum circuit. The quantum layer encodes these 5 features into the quantum state using rotation gates (RY) on each qubit for feature encoding. The PQC consists of 2 variational layers, each containing parameterized RY and RZ rotations followed by circular entanglement implemented via CNOT gates. The circuit is measured using a Pauli-Z operator on the first qubit, and the expectation value is used as the output of the quantum layer.

To integrate the quantum circuit with PyTorch’s autograd system, I implemented a custom torch.autograd.Function that performs the forward pass by executing the quantum circuit with Qiskit’s StatevectorEstimator and computes the expectation value. For the backward pass, the parameter-shift rule was manually applied to calculate gradients with respect to the circuit parameters, enabling end-to-end differentiability and training via gradient descent.

The final layer in the model maps the single scalar output of the quantum layer to a binary classification logit. The model was trained using the BCEWithLogitsLoss function with class balancing, optimized by Adam with a learning rate of 0.01 and weight decay for regularization. The training ran for 30 epochs, with accuracy and loss tracked on both training and test sets.

This project demonstrated the feasibility of combining classical and quantum layers in a single model and training it end-to-end on a real-world medical classification task. However, quantum simulation overhead significantly impacts performance, and manually implementing the parameter-shift rule for gradients is computationally expensive. The choice to reduce the feature dimension to match the number of qubits was necessary due to hardware and simulation constraints. Overall, this work provided valuable hands-on experience with quantum circuit design, quantum gradient computation, and hybrid model training, laying the groundwork for further exploration of quantum machine learning models on actual quantum hardware or with more sophisticated encoding and entanglement strategies.
